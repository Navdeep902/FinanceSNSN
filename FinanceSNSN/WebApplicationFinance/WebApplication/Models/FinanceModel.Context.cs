//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbfinanceEntities : DbContext
    {
        public dbfinanceEntities()
            : base("name=dbfinanceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admin { get; set; }
        public virtual DbSet<Card> Card { get; set; }
        public virtual DbSet<Cart> Cart { get; set; }
        public virtual DbSet<EMICard> EMICard { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<RegisterBank> RegisterBank { get; set; }
        public virtual DbSet<Transactions> Transactions { get; set; }
    
        public virtual int Delete_EMIDetails(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_EMIDetails", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AdminLoginCheck(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AdminLoginCheck", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_CartProducts_Result> sp_CartProducts(Nullable<int> cartId)
        {
            var cartIdParameter = cartId.HasValue ?
                new ObjectParameter("cartId", cartId) :
                new ObjectParameter("cartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CartProducts_Result>("sp_CartProducts", cartIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_check(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_check", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_checkverify(string uname)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_checkverify", unameParameter);
        }
    
        public virtual ObjectResult<sp_CreditDetails_Result> sp_CreditDetails(Nullable<int> cardNumber)
        {
            var cardNumberParameter = cardNumber.HasValue ?
                new ObjectParameter("cardNumber", cardNumber) :
                new ObjectParameter("cardNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CreditDetails_Result>("sp_CreditDetails", cardNumberParameter);
        }
    
        public virtual ObjectResult<string> sp_EmailCheck(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_EmailCheck", emailParameter);
        }
    
        public virtual int sp_GetAllRegister()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetAllRegister");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetCardNumberWithUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetCardNumberWithUsername", usernameParameter);
        }
    
        public virtual int sp_InsertEMICard(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertEMICard", usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_LastTransactionDate(string username, Nullable<int> productId)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_LastTransactionDate", usernameParameter, productIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> sp_TotalCostWithout(Nullable<int> cartId)
        {
            var cartIdParameter = cartId.HasValue ?
                new ObjectParameter("cartId", cartId) :
                new ObjectParameter("cartId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_TotalCostWithout", cartIdParameter);
        }
    
        public virtual int sp_updatepassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatepassword", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_UserLoginCheck(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_UserLoginCheck", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_UserProducts_Result> sp_UserProducts(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserProducts_Result>("sp_UserProducts", usernameParameter);
        }
    
        public virtual ObjectResult<sp_UserProductWithId_Result> sp_UserProductWithId(string username, Nullable<int> productId)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserProductWithId_Result>("sp_UserProductWithId", usernameParameter, productIdParameter);
        }
    
        public virtual ObjectResult<sp_UserTransactions_Result> sp_UserTransactions(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserTransactions_Result>("sp_UserTransactions", usernameParameter);
        }
    
        public virtual ObjectResult<string> sp_UserWithEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_UserWithEmail", emailParameter);
        }
    }
}
